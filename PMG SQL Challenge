-- This project involves analyzing and managing data related to marketing performance, website revenue, and campaign information.
-- It utilizes a relational database containing tables for tracking daily advertising spend, performance metrics, website revenue, and campaign attributes. 
-- The goal is to extract valuable insights, assess campaign efficiency, and make data-driven decisions to optimize marketing strategies and maximize revenue.


-- First, I create a database. Next, I create the following tables:
create table marketing_data (
 date datetime,
 campaign_id varchar(50),
 geo varchar(50),
 cost float,
 impressions float,
 clicks float,
 conversions float
);
 
create table website_revenue (
 date datetime,
 campaign_id varchar(50),
 state varchar(2),
 revenue float
);
 
create table campaign_info (
 id int not null primary key,
 name varchar(50),
 status varchar(50),
 last_updated_date datetime
);
  
--Then I inserted the data from campaign_info.csv into the table campaign_info
--Then I inserted the data from marketing_performance.csv into the table marketing_data
--Then I inserted the data from website_revenue.csv into the table website_revenue

-- Display the campaign_info, marketing_data, and website_revenue tables.
SELECT *
FROM campaign_info;

SELECT *
FROM marketing_data;

SELECT *
FROM website_revenue;


-- 1. Write a query to get the sum of impressions by day.
SELECT date, SUM(impressions) AS total_impressions
FROM marketing_data
GROUP BY date;


-- 2. Write a query to get the top three revenue-generating states in order of best to worst.
SELECT state, SUM(revenue) AS total_revenue
FROM website_revenue
GROUP BY state
ORDER BY total_revenue DESC
LIMIT 3;
--answer: the top three revenue-generating states in order of best to worst include NY, GA, and OH.


-- How much revenue did the third best state generate?
SELECT state, SUM(revenue) AS total_revenue
FROM website_revenue
GROUP BY state
ORDER BY total_revenue DESC
LIMIT 2, 1;
--answer: OH generated a total revenue of $37,577.


-- 3. Write a query that shows total cost, impressions, clicks, and revenue of each campaign.
-- Make sure to include the campaign name in the output.
SELECT c.name AS campaign_name,
SUM(md.cost) AS total_cost,
SUM(md.impressions) AS total_impressions,
SUM(md.clicks) AS total_clicks,
SUM(wr.revenue) AS total_revenue
FROM campaign_info c
LEFT JOIN marketing_data md ON c.id = md.campaign_id
LEFT JOIN website_revenue wr ON c.id = wr.campaign_id
GROUP BY c.name;


-- 4. Write a query to get the number of conversions of Campaign5 by state.
-- Which state generated the most conversions for this campaign?
SELECT wr.state, SUM(md.conversions) AS total_conversions
FROM marketing_data md
JOIN website_revenue wr ON md.campaign_id = wr.campaign_id
JOIN campaign_info c ON md.campaign_id = c.id
WHERE c.name = 'Campaign5'
GROUP BY wr.state
ORDER BY total_conversions DESC
LIMIT 1;
-- answer: GA generated the most conversions for this campaign.
-- They generated a total of 3342 conversions.


-- 5. In your opinion, which campaign was the most efficient, and why?
SELECT c.name AS campaign_name,
SUM(md.cost) AS total_cost,
SUM(md.conversions) AS total_conversions,
SUM(md.cost) / SUM(md.conversions) AS cost_per_conversion
FROM campaign_info c
LEFT JOIN marketing_data md ON c.id = md.campaign_id
GROUP BY c.name
ORDER BY cost_per_conversion;
-- answer: Campaign4 was the most efficient because it is the lowest cost per conversion.
-- Campaign4 costs ~$0.4266 per conversion.


-- Bonus Question
-- 6. Write a query that showcases the best day of the week (e.g., Sunday, Monday, Tuesday, etc.) to run ads.
SELECT strftime('%A', date) AS day_of_week,
SUM(impressions) AS total_impressions
FROM marketing_data
GROUP BY day_of_week
ORDER BY total_impressions DESC
LIMIT 1;
